name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

# Allow GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Run tests with coverage
      run: npm run test:cover
    
    - name: Generate coverage JSON for badge
      if: matrix.node-version == '22.x' && github.ref == 'refs/heads/master'
      run: |
        # Extract coverage percentages from coverage-summary.json
        STATEMENTS=$(node -p "Math.round(JSON.parse(require('fs').readFileSync('coverage/coverage-summary.json', 'utf8')).total.statements.pct)")
        LINES=$(node -p "Math.round(JSON.parse(require('fs').readFileSync('coverage/coverage-summary.json', 'utf8')).total.lines.pct)")
        FUNCTIONS=$(node -p "Math.round(JSON.parse(require('fs').readFileSync('coverage/coverage-summary.json', 'utf8')).total.functions.pct)")
        BRANCHES=$(node -p "Math.round(JSON.parse(require('fs').readFileSync('coverage/coverage-summary.json', 'utf8')).total.branches.pct)")
        
        echo "Coverage: Statements=${STATEMENTS}%, Lines=${LINES}%, Functions=${FUNCTIONS}%, Branches=${BRANCHES}%"
        
        # Create shields.io compatible JSON
        cat > coverage/coverage-badge.json << EOF
        {
          "schemaVersion": 1,
          "label": "coverage",
          "message": "${STATEMENTS}%",
          "color": "brightgreen"
        }
        EOF
        
        # Also create detailed coverage JSON
        cat > coverage/coverage-details.json << EOF
        {
          "statements": ${STATEMENTS},
          "lines": ${LINES},
          "functions": ${FUNCTIONS},
          "branches": ${BRANCHES},
          "overall": ${STATEMENTS}
        }
        EOF
    
    - name: Upload coverage reports
      if: matrix.node-version == '22.x' && github.ref == 'refs/heads/master'
      uses: actions/upload-pages-artifact@v3
      with:
        path: coverage/
    
    - name: Build
      run: npm run build
  
  deploy-pages:
    if: github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
